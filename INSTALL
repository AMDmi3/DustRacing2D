Build & install instructions
============================

These are build & install instructions for Dust Racing 2D.

Build systems
=============

The "official" build system for Linux is CMake.

There are also qmake project files for easier cross-compilation for Windows and Android.
Qmake project files requires Qt5 at the moment, but CMake can build for Qt4 and Qt5.

I used to make Windows releases also with CMake, but in the future I'll cross-compile for Windows
on Ubuntu host by using MXE and qmake. MXE is a cool cross-compilation environment and all
libraries are linked statically by default (no DLLs needed).

Build dependencies
==================

Currently the build depends on Qt only.

Both Qt4 and Qt5 are supported, and Qt4 is used by default.

Qt5 can be enabled by passing -DUseQt5=1 to cmake or to
the configure script.

Dustrac also exploits some features of the C++11
standard, so a compliant compiler is required (GCC >= 4.6).

NOTE!!: Building with Microsoft Visual C++ might not work, because it has an incomplete
        support for the C++11 standard. Should be possible with minor code tweaks, though.

Building in the command line on Linux (tested on Ubuntu 12.04)
==============================================================

Development build (the game can be run without installing anything):
-------------------------------------------------------------------

1) Install Qt4 development files (libqt4-dev on Ubuntu).
2) Install CMake.
3) Go to the source directory and run:

$ ./configure

This runs CMake that generates the makefiles.
You can also run cmake directly. The configure script
is only for convenience and is just a wrapper for cmake.

If everything went ok, run:

$ make

This will build the editor and the game binaries.

Run the game:

$ ./dustrac-game

Run the editor:

$ ./dustrac-editor

Release build (in this example game installs under /usr):
--------------------------------------------------------

$ ./configure -DReleaseBuild=1 -DCMAKE_INSTALL_PREFIX=/usr

This runs CMake that generates the makefiles.
If everything went ok, run:

$ make

This will build the editor and the game binaries.

Install the binaries and data files:

$ sudo make install

This install also the desktop files so Dust Racing
should appear in your application menu.

Cross-compiling for Windows with MXE on Linux (tested on Ubuntu 13.10)
======================================================================

1) Install MXE (http://mxe.cc)
2) Install Qt5 with MXE
3) Run <Your MXE installation dir>/usr/i686-pc-mingw32/qt5/bin/qmake dustrac.pro
4) make

CPack
=====

Dust Racing 2D has a support for CPack. It's not complete, but can be used to generate
some generic binary packages.

After a successful build run CPack:

$ cpack

This will generate .tar.gz and .sh binary packages on Linux.

For packagers
=============

The binaries only need to find the data dir that includes
all the runtime data. This can be set in the main CMakeLists.txt
and is given to the game via -DDATA_PATH.

The release build should be used when packaging (give
-DReleaseBuild=1 to cmake).

Currently the data files install to CMAKE_INSTALL_PREFIX/share/DustRacing
and the binaries install to CMAKE_INSTALL_PREFIX/bin.

CMAKE_INSTALL_PREFIX usually defaults to /usr/local and
can be changed by giving, for example, -DCMAKE_INSTALL_PREFIX=/usr
to cmake (or to the configure script).


-- Jussi Lind <jussi.lind@iki.fi>

